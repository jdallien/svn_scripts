-------------------------------------------------------------
Some scripts I use to automate subversion tasks.
Jeff Dallien (jeff@dallien.net)  http://jeff.dallien.net
-------------------------------------------------------------

annotate   - a quick way to see annotations on a full file, with scrolling.
conflicts  - simple shortcut to seeing which files are currently in a
             conflicted state.
code_ratio - Ruby script to show what percentage of lines are attributed to
             each developer in an 'svn blame' output.
svn_wc2b - working copy to branch
svn_b2wc - branch to working copy

Other than the typing involved, there's not much to creating a short-lived
branch in subversion, and some small scripts will automate a lot of the
process for you. Here are two scripts that work for me. They assume a
repository structure like:

project/trunk/
       /branches/some_branch
                /another_branch

When you want to share your working copy of trunk, type:

> svn_wc2b   # creates branch, switches to it    
> svn commit # commit your in-progress work to the branch

To get your code, another developer just needs to type:

> svn switch http://repository/project/branches/my_working_copy

When the other developer is done and has committed changes, use the second
script, svn_b2wc. From your directory that has been switched into your branch:

> svn_b2wc # switch back to trunk, merge branch changes, delete branch

The code changed in the branch is now back in your working copy of trunk and
you can continue working until you are ready to commit. 
